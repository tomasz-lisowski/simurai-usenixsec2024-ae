; !!! NOTE !!!
; This file is used when yate is registering itself to a remote server
;
; Warning: all strings are case sensitive
;
; Sections with enabled=no are always ignored.
; If the enabled parameter is missing sections without username are ignored.
; If enabled=yes the accounts are logged in even without an username.
;
; Parameter description:
;   protocol: The protocol to register on (sip, iax, h323, jabber ...)
;   username: Account username
;   password: Account password
;   interval: Registration interval (in seconds) to request from server (ignored for jabber)
;
; SIP:
;   description: Caller name to set on outgoing calls on this account if none specified when routing
;   registrar: Registrar address. A port can be specified here (e.g. 1.2.3.4:7999)
;   authname: Authentication name to use instead of username when authenticating
;   domain: Authentication domain if any
;   outbound: Optional outbound proxy server if different from registrar.
;     A port can be specified here (e.g. 1.2.3.4:7999)
;   ip_transport: Optional SIP transport to use (udp, tcp, tls).
;     Defaults to udp
;   ip_transport_localip:
;     UDP: Used in conjuction with ip_transport_localport to identify the listener to use
;     TCP/TLS: Optional local ip to use when connecting
;   ip_transport_localport:
;     UDP: Used in conjuction with ip_transport_localip to identify the listener to use
;     TCP/TLS: Optional local port to bind on when connecting
;   localaddress: Local address to set in sent messages
;     Set it to 'yes' to detect NAT and re-register with public ip when NAT is detected
;     Set it to 'no' or ipaddress (e.g. 1.2.3.4 or 1.2.3.4:5060) to disable NAT detection
;   keepalive: Optional interval for NAT keep alive.
;     Defaults to 0 if NAT detection is disabled
;   match_port: Match the UDP port for inbound calls from a Registrar
;     Default true
;   match_user: Match the URI user for inbound calls from a Registrar
;     Default true
;   sips: Boolean. Use SIPS URI for register/contact. Transport defaults to TLS if enabled
;
;   NOTE: Default port is 5060 for udp/tcp and 5061 for tls
;
; Jabber:
;   domain: Authentication domain
;   port: Server port. Defaults to 5222
;   server: Optional jabber server ip address to connect to.
;     If set the jabber stream will try first to connect to this address
;   localip: Optional local ip address to use when connecting.
;     Connect will fail if the address is invalid
;   resource: Optional resource to request from server
;   priority: Optional resource priority to set in initial presence
;   options: Comma separated list of stream flags
;     - allowplainauth: Allow plain password authentication
;     - tlsrequired: Stream encryption is required
;     - noautorestart: Don't restart the stream when disconnected (NOT RECOMMENDED)
;   nocompression: Boolean. Set it to 'yes' to disable stream compression
;
; IAX:
;   server: Registrar address or domain. A port can be specified here (e.g. 1.2.3.4:7999)
;   port: Registrar port if not specified in 'server' parameter
;     If not set the port defaults to 4569
;   connection_id: The name of the iax listener to use for registration
;   ip_transport_localip: This parameter is used in conjuction ip_transport_localport
;     to identify the listener to use for registration and outgoing calls
;   ip_transport_localport: Local port. This parameter is used to identify the listener
;     to use for registration and outgoing calls
;   trunking: Enable trunking for outgoing calls sent on this line
;   The following parameters can also be set (see yiaxchan.conf.sample for more info):
;   trunk_timestamps: Configure how trunked audio data is sent, enable it for
;     trunked data with timestamps and disable it to send trunked data without timestamps
;   trunk_sendinterval: Interval, in milliseconds, to send trunked trunked audio data
;   trunk_efficient_use: Use the trunk efficiently: don't send trunking data when
;     there is only 1 call using it
;   trunk_maxlen: Maximum value for trunked data frames
;   trunk_nominits_sync_use_ts: Configure how to re-build timestamps when
;     processing incoming trunked audio without miniframe timestamps
;   trunk_nominits_ts_diff_restart: The difference (in milliseconds) between
;     current timestamp and first timestamp of incoming trunked audio data without
;     miniframe timestamps at which to restart timestamps build data
;
; H323:
;   server: Registrar IP address
;   addr: Local address for H323 listener (leave it empty to listen on all interfaces)
;   port: Local port for H323 listener

;[general]
; Only in [general] if auto_oper is not empty on initialize the file is reloaded and each operation executed
;auto_oper=logout,login

[test_sip]
enabled=no
protocol=sip
;username=me
description=Test SIP account
;interval=600
;authname=metoo
;password=1234
;domain=somewhere.org
;registrar=10.0.0.1:5060
;outbound=10.0.0.1:5061
;localaddress=192.168.0.1:5062

[test_h323]
enabled=no
protocol=h323
;username=me
description=Test H.323 account
;interval=600
;password=1234

[test_iax]
enabled=no
protocol=iax
;username=me
description=Test IAX2 account
;interval=600
;password=1234
;server=10.0.0.2

[test_jabber]
enabled=no
protocol=jabber
;username=me
;domain=example.com
;password=1234
;options=allowplainauth
